ASEI BASIC PROJECT LAYOUT - Rev 2019.03.27

Directory Structure:
  config/                   = put configuration files here (eg: CMT/AGUI config files)
  docs/                     = put project documentation, references, and any notes here
  doxygen/                  = put all doxygen-related files here
  doxygen/images/           = put project images (eg: schematics, timing diagrams, etc.) for reference
                              in documentation here. Doxygen is configured to point to this directory to
                              match @ref tags in the documentation. This folder is optional and can be 
                              deleted if not required, however a warning will appear in ERRORS.log.
  doxygen/common.doxyfile   = global doxyfile configuration - DO NOT EDIT.
  doxygen/project.doxyfile  = project doxyfile configuration. EDIT THIS FILE TO SUIT PROJECT NEEDS.
  doxygen/ERRORS.log        = file created during Doxygen generate process. All Doxygen warnings and 
                              errors will appear here.
  doxygen/project.tag       = this file is generated by Doxygen so that other projects can reference this
                              project's documentation. To include this project's documentation in another
                              project.doxyfile, edit the other project's TAGFILES parameter.
                              (ex: TAGFILES = "MyProject/doxygen/project.tag=../../../MyProject/doxygen/html")
  scripts/                  = put all scripts here (eg: .as2, *.py, *.sh, etc.)
  src/                      = put all project source code here
  .gitignore                = copied from gitignore.default on server, with additional rules added. This
                              file supersedes gitignore.default
						
						
git repo structure
   The git repo default is to have a master and integration branch.  
   Only released software should be committed/merged to master.   
   integration is a compilable, current working/dev branch.  Please branch off
   of integration for your personal working branch, merging back to integration.  
   Only after a released version is created/tested from integration should 
   it be merged back to master and then tagged as a versioned release.
   
   
